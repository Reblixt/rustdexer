//! `SeaORM` Entity, @generated by sea-orm-codegen 2.0.0-rc.13

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "WhiteListAddress")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
    pub address: String,
    pub allocation: i32,
    #[sea_orm(column_name = "launchId", column_type = "Text")]
    pub launch_id: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub name: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::launchpad_collection::Entity",
        from = "Column::LaunchId",
        to = "super::launchpad_collection::Column::LaunchId",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    LaunchpadCollection,
    #[sea_orm(
        belongs_to = "super::wallet::Entity",
        from = "Column::Address",
        to = "super::wallet::Column::Address",
        on_update = "Cascade",
        on_delete = "Restrict"
    )]
    Wallet,
}

impl Related<super::launchpad_collection::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LaunchpadCollection.def()
    }
}

impl Related<super::wallet::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Wallet.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
